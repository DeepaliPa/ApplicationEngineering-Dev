/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RegularMaintainanceDeptRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.CitizenOrganisation;
import Business.Organization.Citizens;
import Business.Organization.Organization;
import Business.Organization.RegularMaintainanceDeptOrganisation;
import Business.Organization.TraficControlRoomOrganisation;
import Business.Organization.TraficManagementPatrolOrganisation;
import Business.Role.TraficControlRoomRole;

import Business.UserAccount.UserAccount;

import Business.WorkQueue.RegularMaintainanceToTrafficControl;

import Business.WorkQueue.WorkRequest;

import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import static userinterface.RegularMaintainanceDeptRole.MailSender.emailBody;
import static userinterface.RegularMaintainanceDeptRole.MailSender.emailSubject;

/**
 *
 * @author DeepaliP
 */
public class RegularMaintainanceWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private RegularMaintainanceDeptOrganisation organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private ArrayList<String> list3;
    private ArrayList<String> list4;
    private String result = " ";
    private String value;

    /**
     * Creates new form RegularMaintainanceWorkAreaJPanel
     */
    public RegularMaintainanceWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, RegularMaintainanceDeptOrganisation organization, Enterprise enterprise) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        list3 = new ArrayList<String>();
        list4 = new ArrayList<String>();
        valueLabel.setText(enterprise.getName());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        messageJTextField = new javax.swing.JTextField();
        chkTunnelCleaning = new javax.swing.JCheckBox();
        chkboxGrassCutting = new javax.swing.JCheckBox();
        valueLabel = new javax.swing.JLabel();
        btnGenerateMessage = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        chkRebuilding = new javax.swing.JCheckBox();
        btnSendEmail = new javax.swing.JButton();
        StatesCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        chkBridgeInspection = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Images/rebuilding.jpg"))); // NOI18N

        messageJTextField.setEditable(false);
        messageJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        chkTunnelCleaning.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chkTunnelCleaning.setText("Tunnel Cleaning");
        chkTunnelCleaning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTunnelCleaningActionPerformed(evt);
            }
        });

        chkboxGrassCutting.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chkboxGrassCutting.setText("Grass Cutting");
        chkboxGrassCutting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxGrassCuttingActionPerformed(evt);
            }
        });

        valueLabel.setBackground(new java.awt.Color(204, 204, 255));
        valueLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnGenerateMessage.setBackground(new java.awt.Color(204, 204, 255));
        btnGenerateMessage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGenerateMessage.setText("SEND INFORMATION");
        btnGenerateMessage.setActionCommand("SEND Information");
        btnGenerateMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateMessageActionPerformed(evt);
            }
        });

        enterpriseLabel.setBackground(new java.awt.Color(204, 204, 255));
        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");

        chkRebuilding.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chkRebuilding.setText("Rebuilding  a guard rail");
        chkRebuilding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRebuildingActionPerformed(evt);
            }
        });

        btnSendEmail.setBackground(new java.awt.Color(204, 204, 255));
        btnSendEmail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSendEmail.setText("SEND EMAIL");
        btnSendEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendEmailActionPerformed(evt);
            }
        });

        StatesCombo.setBackground(new java.awt.Color(204, 204, 255));
        StatesCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        StatesCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Allston", "Brighton", "Fenway Kenmore", "Mission Hill", "Jamaica PlainRoxbury", "Downtown", "CharlesTown", "Back Bay", "Dorchester", "South End", "Bay Village", "South Boston", "East Boston", "Hyde Park" }));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Images/bridgeInspection.jpg"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Images/tunnelCleaning.jpg"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Images/grassCutting.jpg"))); // NOI18N

        chkBridgeInspection.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chkBridgeInspection.setText("Bridge Inspection");
        chkBridgeInspection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBridgeInspectionActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(204, 204, 255));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel6.setText("REGULAR MAINTAINANCE DEPT WORK AREA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSendEmail)
                            .addComponent(StatesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnGenerateMessage)
                                .addGap(34, 34, 34)
                                .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 274, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(chkBridgeInspection, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(chkTunnelCleaning, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkRebuilding)
                            .addComponent(chkboxGrassCutting, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(156, 156, 156)
                                .addComponent(chkBridgeInspection)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(140, 140, 140)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chkTunnelCleaning)
                                .addGap(131, 131, 131)))
                        .addComponent(StatesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGenerateMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(messageJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(btnSendEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(36, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(chkboxGrassCutting)
                        .addGap(280, 280, 280)
                        .addComponent(chkRebuilding)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chkTunnelCleaningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTunnelCleaningActionPerformed
        if (chkTunnelCleaning.isSelected()) {
            result += " " + chkTunnelCleaning.getText();
            
        }
    }//GEN-LAST:event_chkTunnelCleaningActionPerformed

    private void chkboxGrassCuttingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxGrassCuttingActionPerformed
        if (chkboxGrassCutting.isSelected()) {
            result += " " + chkboxGrassCutting.getText();
         
        }
    }//GEN-LAST:event_chkboxGrassCuttingActionPerformed

    private void btnGenerateMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateMessageActionPerformed
        if (chkTunnelCleaning.isSelected() | chkboxGrassCutting.isSelected() | chkRebuilding.isSelected() | chkBridgeInspection.isSelected()) {
            value = result + " is in process at " + StatesCombo.getSelectedItem();
            messageJTextField.setText(value);
            RegularMaintainanceToTrafficControl req1 = new RegularMaintainanceToTrafficControl();
            req1.setMessage(value);
            req1.setSender(userAccount);
            req1.setStatus("Sent");

            Organization org = null;
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof TraficControlRoomOrganisation) {
                    org = organization;
                    break;
                }
            }
            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(req1);
                userAccount.getWorkQueue().getWorkRequestList().add(req1);
            }
            JOptionPane.showMessageDialog(null, "Information Sent Successfully To control Dept");
        }else
        {
            JOptionPane.showMessageDialog(null, "Select any value");
        }
    }//GEN-LAST:event_btnGenerateMessageActionPerformed

    private void chkRebuildingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRebuildingActionPerformed
        if (chkRebuilding.isSelected()) {
            result += " " + chkRebuilding.getText();
          
        }
    }//GEN-LAST:event_chkRebuildingActionPerformed

    private void chkBridgeInspectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBridgeInspectionActionPerformed
        // TODO add your handling code here:
        if (chkBridgeInspection.isSelected()) {
            result += " " + chkBridgeInspection.getText();
         
        }
    }//GEN-LAST:event_chkBridgeInspectionActionPerformed

    private void btnSendEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendEmailActionPerformed
        CitizenOrganisation ho;
  
        for (Organization or : enterprise.getOrganizationDirectory().getOrganizationList()) {

            if (or instanceof CitizenOrganisation) {
                ho = (CitizenOrganisation) or;
                for (Citizens c : ho.cD.getCitizensdirectory()) {
                    list3.add(c.getEmail_id());
                    //tele_no= new String[organ.getCitizenDirectory().getCitizensdirectory().size()];
                }
                String email_id[] = new String[list3.size()];

                for (int k = 0; k < list3.size(); k++) {

                    email_id[k] = list3.get(k);
                    MailSender mailSender = new MailSender(email_id[k], emailSubject, emailBody);
               
                    JOptionPane.showMessageDialog(null, "Email Sent Successfully");
                }

            }
        }
    }//GEN-LAST:event_btnSendEmailActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox StatesCombo;
    private javax.swing.JButton btnGenerateMessage;
    private javax.swing.JButton btnSendEmail;
    private javax.swing.JCheckBox chkBridgeInspection;
    private javax.swing.JCheckBox chkRebuilding;
    private javax.swing.JCheckBox chkTunnelCleaning;
    private javax.swing.JCheckBox chkboxGrassCutting;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
